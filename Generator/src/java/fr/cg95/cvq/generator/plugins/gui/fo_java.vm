##***********************************************************************************
#macro (writeAddressTypeFields $field)
#if ($field.SchemaType == "AddressType")
  #set ($baseName = $field.javaName(""))
	private String ${baseName}AdditionalDeliveryInformation;
	private String ${baseName}AdditionalGeographicalInformation;
	private String ${baseName}StreetNumber;
	private String ${baseName}StreetName;
	private String ${baseName}PlaceNameOrService;
	private String ${baseName}PostalCode;
	private String ${baseName}City;
#end
#end
#macro (writeAddressTypeLoad $field)
#if ($field.SchemaType == "AddressType")
  #set ($baseName = $field.javaName(""))
			this.${baseName}AdditionalDeliveryInformation = request.${field.javaName("get")}().getAdditionalDeliveryInformation();
			this.${baseName}AdditionalGeographicalInformation = request.${field.javaName("get")}().getAdditionalGeographicalInformation();
			this.${baseName}StreetNumber = request.${field.javaName("get")}().getStreetNumber();
			this.${baseName}StreetName = request.${field.javaName("get")}().getStreetName();
			this.${baseName}PlaceNameOrService = request.${field.javaName("get")}().getPlaceNameOrService();
			this.${baseName}PostalCode = request.${field.javaName("get")}().getPostalCode();
			this.${baseName}City = request.${field.javaName("get")}().getCity();
#end
#end
#macro (writeAddressTypeSave $field)
#if ($field.SchemaType == "AddressType")
  #set ($baseName = $field.javaName(""))
			request.${field.javaName("get")}().setAdditionalDeliveryInformation(this.${baseName}AdditionalDeliveryInformation);
			request.${field.javaName("get")}().setAdditionalGeographicalInformation(this.${baseName}AdditionalGeographicalInformation);
			request.${field.javaName("get")}().setStreetNumber(this.${baseName}StreetNumber);
			request.${field.javaName("get")}().setStreetName(this.${baseName}StreetName);
			request.${field.javaName("get")}().setPlaceNameOrService(this.${baseName}PlaceNameOrService);
			request.${field.javaName("get")}().setPostalCode(this.${baseName}PostalCode);
			request.${field.javaName("get")}().setCity(this.${baseName}City);
#end
#end
#macro (writeAddressTypeIsComplete $field)
#if ($field.SchemaType == "AddressType")
  #set ($baseName = $field.javaName(""))
  #set ($methodName = $field.javaName("method"))
		if (this.check${methodName}StreetName() &&
			((this.${baseName}StreetName == null) || (this.${baseName}StreetName.length() == 0)))
			return false;
		if (this.check${methodName}PostalCode() &&
			((this.${baseName}PostalCode == null) || (this.${baseName}PostalCode.length() == 0)))
			return false;
		if (this.check${methodName}City() &&
			((this.${baseName}City == null) || (this.${baseName}City.length() == 0)))
			return false;
#end
#end
#macro (writeGetSetCheck $baseName $methodName $fieldName $condition)
	public void set${methodName}${fieldName}(String ${baseName}${fieldName}) {
		this.${baseName}${fieldName} = ${baseName}${fieldName};
	}
	
	public String get${methodName}${fieldName}() {
		return this.${baseName}${fieldName};
	}
	
	public boolean check${methodName}${fieldName}() {
#if ($condition != "")
		return ${condition};
#else
		return true;
#end
	}

#end
#macro (writeAddressTypeGetSetCheck $field)
#if ($field.SchemaType == "AddressType")
  #set ($baseName = $field.javaName(""))
  #set ($methodName = $field.javaName("method"))
#writeGetSetCheck($baseName $methodName "AdditionalDeliveryInformation" "")
#writeGetSetCheck($baseName $methodName "AdditionalGeographicalInformation" "")
#writeGetSetCheck($baseName $methodName "StreetNumber" "")
#writeGetSetCheck($baseName $methodName "StreetName" $field.Condition)
#writeGetSetCheck($baseName $methodName "PlaceNameOrService" "")
#writeGetSetCheck($baseName $methodName "PostalCode" $field.Condition)
#writeGetSetCheck($baseName $methodName "City" $field.Condition)
#end
#end
##***********************************************************************************
##***********************************************************************************
package ${package};

import java.util.Calendar;
import java.util.Collection;
import java.util.List;
import javax.servlet.http.HttpSession;
import fr.cg95.cvq.wizard.*;
import fr.cg95.cvq.xml.common.*;
import fr.cg95.cvq.xml.${namespace}.*;
import fr.cg95.cvq.xml.${namespace}.${request}Document.${request};

public class ${clazz.Name} extends IStageForm {

#set($fields = $clazz.JavaFields)
#foreach( $field in $fields)
#if ($field.SchemaType == "AddressType")
  #writeAddressTypeFields($field)
#elseif ($field.hasPrivateField())
	private ${field.javaType()}#if($field.isMultipleSelect())[]#end ${field.javaName("")};
#end
#end

	public ${clazz.Name}() {
		super();
	}
	
	public void reset(String state) {
#set($pages = $stage.DisplayPages)
#foreach( $page in $pages)
		if (state.equals("${page.Name}")) {
#set($fields = $page.DisplayElements)
#foreach($field in $fields)
#if ($field.hasPrivateField())
#if ($field.Page == $page.Name)
#if ($field.Mode != "static")
#if ($field.isMultipleSelect())
			for (int i = 0; i < this.${field.javaName("")}.length; i++)
				this.${field.javaName("")}[i] = false;
#end
#end
#end
#end
#end
		}
#end
	}
	
	public void load(HttpSession session, Object xmlbRequest) {
		if ((xmlbRequest != null) && (xmlbRequest instanceof ${request})) {
			${request} request = (${request})xmlbRequest;
#set($fields = $clazz.JavaFields)
#foreach( $field in $fields)
#if ($field.isRepository())
#if ($field.XsdType == "ArrayStorage")
#if ($field.GuiControl != "ticket")
#if ($field.GuiControl != "referential")
			this.${field.javaName("")} = loadForm(this.${field.javaName("")},(Collection)session.getAttribute("${field.Repository}"),${plugin.loadFormRequestField($field)});
#end
#end
#elseif ($field.GuiControl != "selectAuthorityReferential")
			this.${field.javaName("")} = request.${field.javaName("get")}();
#else
  			if (request.${field.authorityReferentialInitialize("get")}() != null)
  				this.${field.javaName("")} = request.${field.javaName("get")}();
#end
#else
#if ($field.xmlPersistent())
#if ($field.SchemaType == "AddressType")
  #writeAddressTypeLoad($field)
#else
#if ($field.values)
			if (request.${field.javaName("getif")}() != null)
#end
#if ($field.GuiControl != "selectAuthorityReferential")
			this.${field.javaName("")} = request.${field.javaName("get")}();
#end
#end
#end
#end
#end
		}
	}
	
	public void save(HttpSession session, Object xmlbRequest) {
		if ((xmlbRequest != null) && (xmlbRequest instanceof ${request})) {
			${request} request = (${request})xmlbRequest;
#set($fields = $clazz.JavaFields)
#foreach( $field in $fields)
#if ($field.isRepository())
#if ($field.XsdType == "ArrayStorage")
#if ($field.GuiControl == "ticket")
			request.${field.javaName("set")}(saveForm((ReservationNode)session.getAttribute("${field.Repository}")));
#elseif ($field.GuiControl == "referential")
			request.${field.javaName("set")}(saveForm((ReferentialData)session.getAttribute("${field.Repository}")));
#elseif ($plugin.saveFormRequestField($field))
			request.${field.javaName("set")}(saveForm(this.${field.javaName("")},(Collection)session.getAttribute("${field.Repository}")));
#end
#elseif ($field.GuiControl != "selectAuthorityReferential")
			request.${field.javaName("set")}(this.${field.javaName("")}${field.suffix});
#else
			request.${field.authorityReferentialInitialize("set")}(${field.authorityReferentialInitialize("ctor")});
			request.${field.javaName("set")}(this.${field.javaName("")}${field.suffix});
#end
#else
#if ($field.xmlPersistent())
#if ($field.SchemaType == "AddressType")
  #writeAddressTypeSave($field)
#else
			request.${field.javaName("set")}(this.${field.javaName("")}${field.suffix});
#end
#end
#end
#end
		}
	}
	
	public boolean isComplete() {
#set($fields = $clazz.JavaFields)
#foreach( $field in $fields)
#if ($field.SchemaType == "AddressType")
  #writeAddressTypeIsComplete($field)
#elseif ($field.hasPrivateField())
#if ($field.required)
#if ($field.javaType() == "String")
		if (this.check${field.javaName("method")}() &&
			((this.${field.javaName("")} == null) || (this.${field.javaName("")}.length() == 0)))
			return false;
#end
#end
#end
#end
		return true;
	}
	
#set($fields = $clazz.JavaFields)
#foreach( $field in $fields)
#if ($field.SchemaType == "AddressType")
  #writeAddressTypeGetSetCheck($field)
#elseif ($field.hasPrivateField())
	public void set${field.javaName("method")}(${field.javaType()}#if($field.isMultipleSelect())[]#end ${field.javaName("")}) {
		this.${field.javaName("")} = ${field.javaName("")};
	}
	
	public ${field.javaType()}#if($field.isMultipleSelect())[]#end get${field.javaName("method")}() {
		return this.${field.javaName("")};
	}
	
	public boolean check${field.javaName("method")}() {
#if ($field.Condition != "")
		return ${field.Condition};
#else
		return true;
#end
	}
#if ($field.isMultipleSelect())

	public void set${field.javaName("method")}(int i, ${field.javaType()} ${field.javaName("")}) {
		this.${field.javaName("")}[i] = ${field.javaName("")};
	}
	
	public ${field.javaType()} get${field.javaName("method")}(int i) {
		return this.${field.javaName("")}[i];
	}
	
	public int getSizeOf${field.javaName("method")}() {
        return this.${field.javaName("")}.length;
    }
    
    public void setSizeOf${field.javaName("method")}(int size) {
        this.${field.javaName("")} = new boolean[size];
    }
    
    public int getNbSelected${field.javaName("method")}() {
        int count = 0;
        for (int i = 0; i < ${field.javaName("")}.length; i++)
            if (${field.javaName("")}[i])
                count++;
        return count;
    }
#end
#if ($field.javaType() == "List")

    public int getSizeOf${field.javaName("method")}() {
        return this.${field.javaName("")}.size();
    }
#end

#end
#end
}
