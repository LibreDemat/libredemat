<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

  <!-- *******************************************************************  -->
  <!-- ***** Requests Instruction Duration Checker Job Configuration *****  -->
  <!-- *******************************************************************  -->

  <bean id="requestInstructionDurationCheckerJob" 
    class="org.libredemat.service.request.job.RequestInstructionDurationCheckerJob">
    <property name="localAuthorityRegistry"><ref bean="localAuthorityRegistry"/></property>
    <property name="requestActionService"><ref bean="requestActionService"/></property>
    <property name="requestWorkflowService"><ref bean="requestWorkflowService"/></property>
    <property name="mailService"><ref bean="mailService"/></property>
    <property name="translationService" ref="translationService" />
    <property name="requestDAO"><ref bean="requestDAO"/></property>
    <property name="requestTypeService" ref="requestTypeService" />
  </bean>

  <bean id="requestInstructionDurationCheckerJobInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="requestInstructionDurationCheckerJob" />
    <property name="targetMethod" value="launchJob" />
    <property name="concurrent" value="false" />
  </bean>

  <!-- testing purposes only -->
  <!-- 
  <bean id="requestInstructionDurationCheckerTrigger" 
    class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    <property name="jobDetail" ref="requestInstructionDurationCheckerJobInvoker"/>
    <property name="startDelay" value="50000"/>
    <property name="repeatInterval" value="600000"/>
  </bean>
  -->

  <!-- production settings -->
  <bean id="requestInstructionDurationCheckerTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="requestInstructionDurationCheckerJobInvoker" />
    <property name="cronExpression" value="0 0 6 * * ?" />
  </bean>

  <!-- *******************************************************************  -->
  <!-- ***** Users Instruction Duration Checker Job Configuration *****  -->
  <!-- *******************************************************************  -->

  <bean id="userInstructionDurationCheckerJob"
    class="org.libredemat.service.users.job.UserInstructionDurationCheckerJob">
    <property name="localAuthorityRegistry" ref="localAuthorityRegistry" />
    <property name="mailService" ref="mailService" />
    <property name="individualDAO" ref="individualDAO" />
    <property name="homeFolderDAO" ref="homeFolderDAO" />
    <property name="requestTypeService" ref="requestTypeService" />
  </bean>

  <bean id="userInstructionDurationCheckerJobInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="userInstructionDurationCheckerJob" />
    <property name="targetMethod" value="launchJob" />
    <property name="concurrent" value="false" />
  </bean>

  <bean id="userInstructionDurationCheckerTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="userInstructionDurationCheckerJobInvoker" />
    <property name="cronExpression" value="0 30 6 * * ?" />
  </bean>

  <!-- *******************************************************************  -->
  <!-- ********* Requests Creation Notification Job Configuration ********  -->
  <!-- *******************************************************************  -->

  <bean id="requestCreationNotificationJob" 
    class="org.libredemat.service.request.job.RequestCreationNotificationJob">
    <property name="localAuthorityRegistry"><ref bean="localAuthorityRegistry"/></property>
    <property name="requestActionService"><ref bean="requestActionService"/></property>
    <property name="mailService"><ref bean="mailService"/></property>
    <property name="translationService" ref="translationService" />
    <property name="requestDAO"><ref bean="requestDAO"/></property>
    <property name="requestTypeService" ref="requestTypeService" />
  </bean>

  <bean id="requestCreationNotificationJobInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="requestCreationNotificationJob" />
    <property name="targetMethod" value="launchJob" />
    <property name="concurrent" value="false" />
  </bean>

  <!-- testing purposes only -->
  <!-- 
  <bean id="requestCreationNotificationTrigger" 
    class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    <property name="jobDetail" ref="requestCreationNotificationJobInvoker"/>
    <property name="startDelay" value="50000"/>
    <property name="repeatInterval" value="600000"/>
  </bean>
  -->

  <!-- production settings -->
  <bean id="requestCreationNotificationTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="requestCreationNotificationJobInvoker" />
    <property name="cronExpression" value="0 0 13,23 * * ?" />
  </bean>

  <!-- *******************************************************************  -->
  <!-- ***************** Requests Seasons Job Configuration **************  -->
  <!-- *******************************************************************  -->

  <bean id="requestSeasonsJob" class="org.libredemat.service.request.job.RequestSeasonsJob">
    <property name="localAuthorityRegistry"><ref bean="localAuthorityRegistry"/></property>
    <property name="requestTypeService"><ref bean="requestTypeService"/></property>
    <property name="requestWorkflowService"><ref bean="requestWorkflowService"/></property>
    <property name="requestSearchService" ref="requestSearchService" />
    <property name="requestActionService" ref="requestActionService" />
  </bean>

  <bean id="requestSeasonsJobInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="requestSeasonsJob" />
    <property name="targetMethod" value="launchJob" />
    <property name="concurrent" value="false" />
  </bean>

  <!-- testing purposes only -->
  <!-- 
  <bean id="requestSeasonsTrigger"
    class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    <property name="jobDetail" ref="requestSeasonsJobInvoker" />
    <property name="startDelay" value="50000" />
    <property name="repeatCount" value="0" />
    <property name="repeatInterval" value="600000"/>
  </bean>
  -->

  <!-- production settings -->
  <bean id="requestSeasonsTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="requestSeasonsJobInvoker" />
    <property name="cronExpression" value="0 0 13,23 * * ?" />
  </bean>

  <!-- ******************************************************************** -->
  <!-- ***************** Draft Management Job Configuration *************** -->
  <!-- ******************************************************************** -->
  
  <bean id="draftManagementJob"
    class="org.libredemat.service.request.job.DraftManagementJob">
    <property name="requestActionService" ref="requestActionService" />
    <property name="localAuthorityRegistry" ref="localAuthorityRegistry" />
    <property name="translationService" ref="translationService" />
    <property name="requestDAO" ref="requestDAO"/>
    <property name="mailService" ref="mailService"/>
    <property name="userSearchService" ref="userSearchService"/>
    <property name="requestTypeService" ref="requestTypeService" />
    <property name="requestWorkflowService" ref="requestWorkflowService" />
  </bean>
  
  <bean id="draftManagementRemoverJobInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="draftManagementJob" />
    <property name="targetMethod" value="launchRemovalJob" />
    <property name="concurrent" value="false" />
  </bean>
  
  <bean id="draftManagementRemoverJobTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="draftManagementRemoverJobInvoker" />
    <property name="cronExpression" value="0 0 4 * * ?" />
  </bean>
  
  <bean id="draftManagementNotifierJobInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="draftManagementJob" />
    <property name="targetMethod" value="launchNotificationJob" />
    <property name="concurrent" value="false" />
  </bean>

  <bean id="draftManagementNotifierJobTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="draftManagementNotifierJobInvoker" />
    <property name="cronExpression" value="0 0 5 * * ?" />
  </bean>

  <!-- testing purposes only -->
  <!--
  <bean id="draftManagementNotifierJobTrigger"
    class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    <property name="jobDetail" ref="draftManagementNotifierJobInvoker" />
    <property name="startDelay" value="50000" />
    <property name="repeatCount" value="0" />
    <property name="repeatInterval" value="600000"/>
  </bean>
  -->

  <!-- *******************************************************************  -->
  <!-- ***** Documents Validity Dates Checking Job Configuration *********  -->
  <!-- *******************************************************************  -->

  <bean id="documentValidityCheckerJob"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="documentService" />
    <property name="targetMethod" value="checkDocumentsValidity" />
    <property name="concurrent" value="false" />
  </bean>

  <!-- testing purposes only -->
  <!-- 
  <bean id="documentValidityCheckerTrigger" 
    class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    <property name="jobDetail" ref="documentValidityCheckerJob"/>
    <property name="startDelay" value="5000"/>
    <property name="repeatInterval" value="600000"/>
  </bean>
  -->

  <!-- production settings -->
  <bean id="documentValidityCheckerTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="documentValidityCheckerJob" />
    <property name="cronExpression" value="0 0 3 * * ?" />
  </bean>
  
  <!-- *******************************************************************  -->
  <!-- ***** Payments Initialization Checking Job Configuration *********  -->
  <!-- *******************************************************************  -->

  <bean id="paymentInitializationCheckerJob"
    class="org.libredemat.service.payment.job.PaymentInitializationDateCheckerJob">
    <property name="localAuthorityRegistry"><ref bean="localAuthorityRegistry"/></property>
    <property name="mailService"><ref bean="mailService"/></property>
    <property name="paymentDAO"><ref bean="paymentDAO"/></property>
  </bean>

  <bean id="paymentInitializationCheckerJobInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="paymentInitializationCheckerJob" />
    <property name="targetMethod" value="launchJob" />
    <property name="concurrent" value="false" />
  </bean>

  <!-- testing purposes only -->
  <!-- 
  <bean id="paymentInitializationCheckerTrigger" 
    class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    <property name="jobDetail" ref="paymentInitializationCheckerJobInvoker"/>
    <property name="startDelay" value="5000"/>
    <property name="repeatInterval" value="150000"/>
  </bean>
  -->
  <!-- production settings -->
  	
  <bean id="paymentInitializationCheckerTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="paymentInitializationCheckerJobInvoker" />
    <property name="cronExpression" value="0 0 0,6,12,18 * * ?" />
  </bean>

  <!-- *******************************************************************  -->
  <!-- ******** Obsolete RequestLocks cleaning job configuration *********  -->
  <!-- *******************************************************************  -->

  <bean id="requestLocksCleaningJob" class="org.libredemat.service.request.job.RequestLocksCleaningJob">
    <property name="localAuthorityRegistry" ref="localAuthorityRegistry"/>
    <property name="requestLockService" ref="requestLockService" />
   </bean>

  <bean id="requestLocksCleaningInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="requestLocksCleaningJob" />
    <property name="targetMethod" value="launchJob" />
    <property name="concurrent" value="false" />
  </bean>

  <bean id="requestLocksCleaningTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="requestLocksCleaningInvoker" />
    <property name="cronExpression" value="0 0 * * * ?" />
  </bean>

  <!-- *******************************************************************  -->
  <!-- ************** Request archiving job configuration ****************  -->
  <!-- *******************************************************************  -->

  <bean id="requestArchivingJob" class="org.libredemat.service.request.job.RequestArchivingJob">
    <property name="localAuthorityRegistry" ref="localAuthorityRegistry"/>
    <property name="requestExternalActionService" ref="requestExternalActionService" />
    <property name="requestDAO" ref="requestDAO" />
    <property name="requestActionDAO" ref="requestActionDAO" />
    <property name="requestExternalActionDAO" ref="requestExternalActionDAO" />
    <property name="genericDAO" ref="genericDAO" />
    <property name="requestPdfService" ref="requestPdfService" />
    <property name="translationService" ref="translationService" />
    <property name="requestWorkflowService"  ref="requestWorkflowService" />
    <property name="requestServiceRegistry"  ref="requestServiceRegistry" />
  </bean>

  <bean id="requestArchivingInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="requestArchivingJob" />
    <property name="targetMethod" value="launch" />
    <property name="concurrent" value="false" />
  </bean>

  <!-- dev -->
  <!--
  <bean id="requestArchivingTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="requestArchivingInvoker" />
    <property name="cronExpression" value="0 0/5 * * * ?" />
  </bean>
  -->

  <!-- prod -->
  <bean id="requestArchivingTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="requestArchivingInvoker" />
    <property name="cronExpression" value="0 0 3 * * ?" />
  </bean>

  <bean id="paymentNotificationJob" class="org.libredemat.service.payment.job.PaymentNotifyToExternalServicesJob">
    <property name="localAuthorityRegistry" ref="localAuthorityRegistry"/>
    <property name="paymentDAO" ref="paymentDAO" />
    <property name="externalService" ref="externalService" />
    <property name="paymentExternalService" ref="paymentExternalService" />
    <property name="externalHomeFolderService" ref="externalHomeFolderService" />
    <property name="translationService" ref="translationService" />
    <property name="mailService" ref="mailService" />
  </bean>

  <bean id="paymentNotificationInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="paymentNotificationJob" />
    <property name="targetMethod" value="launchPaymentNotification" />
    <property name="concurrent" value="false" />
  </bean>

  <bean id="paymentNotificationTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="paymentNotificationInvoker" />
    <property name="cronExpression" value="0 0/1 * * * ?" />
  </bean>

  <bean id="paymentErrorReportInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="paymentNotificationJob" />
    <property name="targetMethod" value="launchErrorReport" />
    <property name="concurrent" value="false" />
  </bean>

  <bean id="paymentErrorReportTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="paymentErrorReportInvoker" />
    <property name="cronExpression" value="0 0 1 * * ?" />
  </bean>

  <bean id="userNotificationJob" class="org.libredemat.service.users.job.UserNotificationJob">
    <property name="localAuthorityRegistry" ref="localAuthorityRegistry"/>
    <property name="genericDAO" ref="genericDAO" />
    <property name="homeFolderDAO" ref="homeFolderDAO" />
    <property name="mailService" ref="mailService" />
    <property name="translationService" ref="translationService" />
  </bean>

  <bean id="userNotificationInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="userNotificationJob" />
    <property name="targetMethod" value="launch" />
    <property name="concurrent" value="false" />
  </bean>

  <bean id="userNotificationTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="userNotificationInvoker" />
    <property name="cronExpression" value="0 0/1 * * * ?" />
  </bean>

  <!-- ******************************************************************** -->
  <!-- ***************** Pending Users Job Configuration ****************** -->
  <!-- ******************************************************************** -->

  <bean id="userPendingManagementJob"
    class="org.libredemat.service.users.job.UserPendingManagementJob">
    <property name="localAuthorityRegistry" ref="localAuthorityRegistry" />
    <property name="translationService" ref="translationService" />
    <property name="mailService" ref="mailService"/>
    <property name="userSearchService" ref="userSearchService"/>
    <property name="userService" ref="userService"/>
    <property name="userWorkflowService" ref="userWorkflowService" />
  </bean>

  <bean id="userPendingManagementRemoverJobInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="userPendingManagementJob" />
    <property name="targetMethod" value="launchRemovalJob" />
    <property name="concurrent" value="false" />
  </bean>

  <bean id="userPendingManagementRemoverJobTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="userPendingManagementRemoverJobInvoker" />
    <property name="cronExpression" value="0 0 5 * * ?" />
  </bean>

  <bean id="userPendingManagementNotifierJobInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="userPendingManagementJob" />
    <property name="targetMethod" value="launchNotificationJob" />
    <property name="concurrent" value="false" />
  </bean>

  <bean id="userPendingManagementNotifierJobTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="userPendingManagementNotifierJobInvoker" />
    <property name="cronExpression" value="0 30 5 * * ?" />
  </bean>

  <!-- testing purposes only
  <bean id="userPendingManagementRemoverDevJobTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="userPendingManagementRemoverJobInvoker" />
    <property name="cronExpression" value="0 * * * * ?" />
  </bean> -->

  <!-- ******************************************************************** -->
  <!-- ******* Imported Home Folder Notification Job Configuration ******** -->
  <!-- ******************************************************************** -->

  <bean id="importedHomeFoldersNotificationJob"
    class="org.libredemat.service.users.job.ImportedHomeFoldersNotificationJob">
    <property name="localAuthorityRegistry" ref="localAuthorityRegistry" />
    <property name="mailService" ref="mailService" />
  </bean>

  <bean id="importedHomeFoldersNotificationJobInvoker"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="importedHomeFoldersNotificationJob" />
    <property name="targetMethod" value="launch" />
    <property name="concurrent" value="false" />
  </bean>

  <bean id="importedHomeFoldersNotificationJobTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="importedHomeFoldersNotificationJobInvoker" />
    <property name="cronExpression" value="0 0 1 * * ?" />
  </bean>
    
  <!-- testing purposes only -->
  <!--    
  <bean id="importedHomeFoldersNotificationJobTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="importedHomeFoldersNotificationJobInvoker" />
    <property name="cronExpression" value="0 0/1 * * * ?" />
  </bean>
  -->

  <!-- *******************************************************************  -->
  <!-- ************ Where everything happens (or not) ********************  -->
  <!-- *******************************************************************  -->

  <bean id="quartzScheduler"
    class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="triggers">
      <set>
        <ref bean="requestCreationNotificationTrigger" />
        <ref bean="requestInstructionDurationCheckerTrigger" />
        <ref bean="userInstructionDurationCheckerTrigger" />
        <ref bean="documentValidityCheckerTrigger" />
        <ref bean="requestSeasonsTrigger" />
        <ref bean="draftManagementRemoverJobTrigger"/>
        <ref bean="draftManagementNotifierJobTrigger"/>
        <ref bean="requestLocksCleaningTrigger"/>
        <ref bean="requestArchivingTrigger"/>
        <ref bean="paymentInitializationCheckerTrigger" />
        <ref bean="paymentNotificationTrigger" />
        <ref bean="paymentErrorReportTrigger" />
        <ref bean="userNotificationTrigger" />
        <ref bean="userPendingManagementNotifierJobTrigger" />
        <ref bean="userPendingManagementRemoverJobTrigger" />
        <!--
        <ref bean="importedHomeFoldersNotificationJobTrigger"/>
        <ref bean="requestWorkflowNavigatorTrigger" />
        -->
      </set>
    </property>
  </bean>

</beans>
