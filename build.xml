<?xml version="1.0"?>
<project name="CapDemat Global Builder" default="release">

  <target name="init">
    <!-- global properties file -->
    <property file="build.properties" />

    <!-- deployment specific properties file -->
    <property file="${deploy.properties_dir}/${deploy.properties_file}" />
    <echo message="Using deployment configuration file : ${deploy.properties_dir}/${deploy.properties_file}" />
  </target>

  <!-- ================================================================================= -->
  <!-- ============================= CLEAN TARGETS ===================================== -->
  <!-- ================================================================================= -->

  <target name="clean" depends="init">
    <antcall target="clean-configfiles" />
    <ant dir="${generator.dir}" target="clean" />
    <ant dir="${model.dir}" target="clean" />
    <ant dir="${bong.dir}" target="clean" />
    <ant dir="${serviceexporter.dir}" target="clean" />
    <antcall target="clean-plugins" />
  </target>

  <target name="clean-configfiles" depends="init">
    <delete file="${libraries.springconf.dir}/applicationContext.xml" />
    <delete file="${libraries.springconf.dir}/applicationContext-serviceexporter.xml" />
    <delete file="${libraries.springconf.dir}/applicationContext-deployment.xml" />
  </target>

  <target name="clean-generator" depends="init">
    <ant dir="${generator.dir}" target="clean" />
  </target>

  <target name="clean-model" depends="init">
    <ant dir="${model.dir}" target="clean" />
  </target>

  <target name="clean-fobo" depends="init">
    <ant dir="${bong.dir}" target="clean" />
  </target>

  <target name="clean-serviceexporter" depends="init">
    <ant dir="${serviceexporter.dir}" target="clean" />
  </target>

  <target name="clean-plugins" depends="init">
    <ant dir="${plugins.csvimporters.concerto.dir}" target="clean" />
    <ant dir="${plugins.csvimporters.subscriberslist.dir}" target="clean" />
    <ant dir="${plugins.paymentproviders.payline.dir}" target="clean" />
    <ant dir="${plugins.paymentproviders.spplus.dir}" target="clean" />
    <ant dir="${plugins.paymentproviders.wynid.dir}" target="clean" />
    <ant dir="${plugins.paymentproviders.payboxsystem.dir}" target="clean" />
    <ant dir="${plugins.externalservices.horanet.dir}" target="clean" />
    <ant dir="${plugins.externalservices.clever.dir}" target="clean" />
    <ant dir="${plugins.externalservices.cpm.dir}" target="clean" />
  </target>

  <!-- ================================================================================= -->
  <!-- ================ CONFIGURATION FILES GENERATION TARGETS ======================= -->
  <!-- ================================================================================= -->

  <target name="prepare-configfiles" depends="init">

    <tstamp>
      <format property="application.revision" pattern="ddMMyyyy" />
    </tstamp>

    <copy file="${libraries.springconf.dir}/applicationContext-serviceexporter.xml.tpl"
          tofile="${libraries.springconf.dir}/applicationContext-serviceexporter.xml"
          verbose="true" overwrite="true">
      <filterset>
        <filter token="deploy_properties_file" value="${deploy_properties_file}" />
      </filterset>
    </copy>

    <copy file="${libraries.springconf.dir}/applicationContext-deployment.xml.tpl"
          tofile="${libraries.springconf.dir}/applicationContext-deployment.xml"
          verbose="true" overwrite="true">
      <filterset>
        <filter token="deploy_properties_file" value="${deploy_properties_file}" />
      </filterset>
    </copy>

    <copy file="${libraries.springconf.dir}/applicationContext.xml.tpl"
          tofile="${libraries.springconf.dir}/applicationContext.xml"
          verbose="true" overwrite="true">
    </copy>
  </target>

  <!-- ================================================================================= -->
  <!-- ============================= GENERATION TARGET ================================= -->
  <!-- ================================================================================= -->

  <target name="generator" depends="init">
    <ant dir="${generator.dir}" target="generator" />
  </target>

  <!-- ================================================================================= -->
  <!-- ============================ COMPILATION TARGETS ================================ -->
  <!-- ================================================================================= -->

  <target name="compile-model" depends="init">
    <ant dir="${model.dir}" target="compile" />
  </target>

  <target name="compile-model-tests" depends="init">
    <ant dir="${model.dir}" target="compile-tests" />
  </target>
	  
  <!-- ================================================================================= -->
  <!-- ====================== SLQ SCHEMA / HIBERNATE TARGETS =========================== -->
  <!-- ================================================================================= -->

  <target name="schemaexport-model" depends="init">
    <ant dir="${model.dir}" target="schemaexport" />
  </target>

  <!-- ================================================================================= -->
  <!-- ==================== CORE LIBS DEPLOYMENT TARGETS =============================== -->
  <!-- ================================================================================= -->

  <target name="deploy-libs" depends="init">
    <ant dir="${generator.dir}" target="deploy" />
    <ant dir="${model.dir}" target="deploy" />
    <ant dir="${serviceexporter.dir}" target="deploy" />
  </target>

  <target name="deploy-xmlschemas" depends="init">
    <ant dir="${generator.dir}" target="deploy" />
  </target>

  <target name="deploy-model" depends="deploy-xmlschemas">
    <ant dir="${model.dir}" target="deploy" />
  </target>

  <target name="deploy-serviceexporter" depends="deploy-model">
    <ant dir="${serviceexporter.dir}" target="deploy" />
  </target>

  <!-- ================================================================================= -->
  <!-- ===================== PLUGINS DEPLOYMENT TARGETS ================================ -->
  <!-- ================================================================================= -->

  <target name="deploy-plugins" depends="init, deploy-model">
    <ant dir="${plugins.csvimporters.concerto.dir}" target="deploy" />
    <ant dir="${plugins.csvimporters.subscriberslist.dir}" target="deploy" />
    <ant dir="${plugins.paymentproviders.payline.dir}" target="deploy" />
    <ant dir="${plugins.paymentproviders.spplus.dir}" target="deploy" />
    <ant dir="${plugins.paymentproviders.wynid.dir}" target="deploy" />
    <ant dir="${plugins.paymentproviders.payboxsystem.dir}" target="deploy" />
    <ant dir="${plugins.externalservices.horanet.dir}" target="deploy" />
    <ant dir="${plugins.externalservices.cpm.dir}" target="deploy" />
    <ant dir="${plugins.externalservices.clever.dir}" target="deploy" />
    <ant dir="${plugins.externalservices.edemande.dir}" target="deploy" />
  </target>

  <target name="deploy-plugin-concerto" depends="init, compile-model">
    <ant dir="${plugins.csvimporters.concerto.dir}" target="deploy" />
  </target>

  <target name="deploy-plugin-subscriberslist" depends="init, compile-model">
    <ant dir="${plugins.csvimporters.subscriberslist.dir}" target="deploy" />
  </target>

  <target name="deploy-plugin-payline" depends="init, compile-model">
    <ant dir="${plugins.paymentproviders.payline.dir}" target="deploy" />
  </target>

  <target name="deploy-plugin-spplus" depends="init, compile-model">
    <ant dir="${plugins.paymentproviders.spplus.dir}" target="deploy" />
  </target>

  <target name="deploy-plugin-wynid" depends="init, compile-model">
    <ant dir="${plugins.paymentproviders.wynid.dir}" target="deploy" />
  </target>

  <target name="deploy-plugin-payboxsystem" depends="init">
    <ant dir="${plugins.paymentproviders.payboxsystem.dir}" target="deploy" />
  </target>

  <target name="deploy-plugin-horanet" depends="init, compile-model">
    <ant dir="${plugins.externalservices.horanet.dir}" target="deploy" />
  </target>

  <target name="deploy-plugin-cpm" depends="init">
    <ant dir="${plugins.externalservices.cpm.dir}" target="deploy" />
  </target>

  <target name="deploy-plugin-clever" depends="init, compile-model">
    <ant dir="${plugins.externalservices.clever.dir}" target="deploy" />
  </target>

  <target name="deploy-plugin-edemande" depends="init">
    <ant dir="${plugins.externalservices.edemande.dir}" target="deploy" />
  </target>

  <!-- ================================================================================= -->
  <!-- ======================= WEBAPPS PREPARATION TARGETS ============================= -->
  <!-- ================================================================================= -->

  <target name="prepare-webapps" depends="prepare-configfiles, deploy-libs, deploy-plugins">
    <ant dir="${serviceexporter.dir}" target="prepare-webapp" />
  </target>

  <target name="prepare-webapp-serviceexporter"
          description="Create the ServiceExporter webapp"
          depends="prepare-configfiles, deploy-model">
    <ant dir="${serviceexporter.dir}" target="prepare-webapp" />
  </target>

  <target name="prepare-webapp-fobo"
          description="Create the FO/BO webapp"
          depends="prepare-configfiles, deploy-model">
    <ant dir="${libraries.dir}" target="bong-runtime-libs" />
    <copy file="${deploy.properties_dir}/${deploy.properties_file}"
          tofile="BackOfficeNG/grails-app/conf/CapDemat-config.properties"
          overwrite="true" />
    <copy file="${libraries.springconf.dir}/applicationContext.xml"
          todir="BackOfficeNG/grails-app/conf/spring"
          overwrite="true">
      <filterset>
        <filter token="perform_db_updates" value="true" />
      </filterset>
    </copy>
    <copy file="${libraries.springconf.dir}/applicationContext-deployment.xml"
          todir="BackOfficeNG/grails-app/conf/spring"
          overwrite="true">
      <filterset>
        <filter token="perform_db_updates" value="true" />
      </filterset>
    </copy>
    <copy file="${libraries.springconf.dir}/applicationContext-admin.xml"
          todir="BackOfficeNG/grails-app/conf/spring"
          overwrite="true">
    </copy>
  </target>

  <!-- ================================================================================= -->
  <!-- =============================== RELEASE TARGETS ================================= -->
  <!-- ================================================================================= -->

  <target name="release" depends="prepare-configfiles, deploy-libs, prepare-webapp-fobo">
    <delete dir="${release.dir}" />
    <mkdir dir="${release.dir}" />
    <ant dir="${serviceexporter.dir}" target="war" />
    <ant dir="${bong.dir}" target="war" />
    <ant dir="${model.dir}" target="admin-package" />
    <ant dir="${assets.dir}" target="assets-template" />
  </target>

  <target name="build-war-serviceexporter" depends="prepare-configfiles, deploy-libs">
    <ant dir="${serviceexporter.dir}" target="war" />
  </target>

  <target name="build-war-fobo" depends="prepare-configfiles, deploy-libs">
    <ant dir="${bong.dir}" target="war" />
  </target>

  <target name="build-admin-package" depends="prepare-configfiles">
    <ant dir="${model.dir}" target="admin-package" />
  </target>

  <target name="build-assets-template" depends="init">
    <ant dir="${assets.dir}" target="assets-template" />
  </target>

  <!-- ================================================================================= -->
  <!-- ============================= UNIT TESTS TARGETS ================================ -->
  <!-- ================================================================================= -->

  <target name="run-model-unit-tests" depends="prepare-configfiles">
    <property name="deploy.properties_dir" value="${model.dir}/test/conf/spring"/>
    <property name="deploy.properties_file" value="model.properties"/>
    <ant dir="${model.dir}" target="run-tests" />
  </target>

  <target name="run-model-coverage-report" depends="prepare-configfiles">
    <ant dir="${model.dir}" target="run-coverage-report" />
  </target>

  <target name="run-model-load-tests" depends="prepare-configfiles">
    <ant dir="${model.dir}" target="run-grinder" />
  </target>

  <!-- ================================================================================= -->
  <!-- ============================ DOCUMENTATION TARGETS ============================ -->
  <!-- ================================================================================= -->

  <target name="documentation" depends="prepare-configfiles">
    <ant dir="${generator.dir}" target="documentation" />
    <ant dir="${model.dir}" target="documentation" />
  </target>

  <target name="documentation-model" depends="prepare-configfiles">
    <ant dir="${model.dir}" target="documentation" />
  </target>

  <target name="documentation-generator" depends="prepare-configfiles">
    <ant dir="${generator.dir}" target="documentation" />
  </target>

</project>

