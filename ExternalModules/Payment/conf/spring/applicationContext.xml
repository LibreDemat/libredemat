<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

  <!-- INCLUDE  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <bean id="dataAccessConfigurer"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:hibernate.properties</value>
        <value>classpath:application.properties</value>
      </list>
    </property>
  </bean>


  <!-- DATA SOURCE  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName">
      <value>${hibernate.connection.driver_class}</value>
    </property>
    <property name="url">
      <value>${hibernate.connection.url}</value>
    </property>
    <property name="username">
      <value>${hibernate.connection.username}</value>
    </property>
    <property name="password">
      <value>${hibernate.connection.password}</value>
    </property>
  </bean>


  <!-- HIBERNATE SESSION FACTORY / INTERCEPTOR  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <bean id="hibernateSessionFactory"
    class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    <property name="mappingLocations">
      <list>
        <value>classpath:/fr/capwebct/modules/payment/business/InvoiceDetail.hbm.xml</value>
        <value>classpath:/fr/capwebct/modules/payment/business/Invoice.hbm.xml</value>
        <value>classpath:/fr/capwebct/modules/payment/business/AccountDetail.hbm.xml</value>
        <value>classpath:/fr/capwebct/modules/payment/business/Account.hbm.xml</value>
        <value>classpath:/fr/capwebct/modules/payment/business/ContractDetail.hbm.xml</value>
        <value>classpath:/fr/capwebct/modules/payment/business/Contract.hbm.xml</value>
        <value>classpath:/fr/capwebct/modules/payment/business/CapwebctFamilyAccount.hbm.xml</value>
        <value>classpath:/fr/capwebct/modules/payment/business/ExternalFamilyAccount.hbm.xml</value>
        <value>classpath:/fr/capwebct/modules/payment/business/ExternalIndividual.hbm.xml</value>
        <value>classpath:/fr/capwebct/modules/payment/business/CapwebctIndividual.hbm.xml</value>
        <value>classpath:/fr/capwebct/modules/payment/business/Payment.hbm.xml</value>
        <value>classpath:/fr/capwebct/modules/payment/business/Agent.hbm.xml</value>
        <value>classpath:/fr/capwebct/modules/payment/business/ExternalImportAudit.hbm.xml</value>
        <value>classpath:/fr/capwebct/modules/payment/business/ExternalApplication.hbm.xml</value>
      </list>
    </property>
    <property name="dataSource">
      <ref local="dataSource" />
    </property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
        <prop key="hibernate.connection.provider_class">
          ${hibernate.connection.provider_class}
        </prop>
      </props>
    </property>
  </bean>

  <bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
    <property name="sessionFactory">
      <ref bean="hibernateSessionFactory" />
    </property>
  </bean>


  <!-- DAO  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <bean id="objectDAO" class="fr.capwebct.modules.payment.dao.hibernate.ObjectDAO">
    <property name="sessionFactory" ref="hibernateSessionFactory"/>
  </bean>
  
  <bean id="invoiceDAO" class="fr.capwebct.modules.payment.dao.hibernate.InvoiceDAO">
    <property name="sessionFactory"  ref="hibernateSessionFactory"/>
  </bean>
  
  <bean id="accountDAO" class="fr.capwebct.modules.payment.dao.hibernate.AccountDAO">
    <property name="sessionFactory" ref="hibernateSessionFactory"/>
  </bean>
  
  <bean id="contractDAO" class="fr.capwebct.modules.payment.dao.hibernate.ContractDAO">
    <property name="sessionFactory" ref="hibernateSessionFactory"/>
  </bean>
    
  <bean id="externalFamilyAccountDAO" 
    class="fr.capwebct.modules.payment.dao.hibernate.ExternalFamilyAccountDAO">
    <property name="sessionFactory" ref="hibernateSessionFactory"/>
  </bean>
  
  <bean id="capwebctFamilyAccountDAO" 
    class="fr.capwebct.modules.payment.dao.hibernate.CapwebctFamilyAccountDAO">
    <property name="sessionFactory" ref="hibernateSessionFactory"/>
  </bean>
  
  <bean id="paymentDAO" class="fr.capwebct.modules.payment.dao.hibernate.PaymentDAO">
    <property name="sessionFactory" ref="hibernateSessionFactory"/>
  </bean>

  <bean id="agentDAO" class="fr.capwebct.modules.payment.dao.hibernate.AgentDAO">
    <property name="sessionFactory" ref="hibernateSessionFactory"/>
  </bean>

  <bean id="externalImportAuditDAO" 
    class="fr.capwebct.modules.payment.dao.hibernate.ExternalImportAuditDAO">
    <property name="sessionFactory" ref="hibernateSessionFactory" />
  </bean>

  <bean id="externalApplicationDAO"
    class="fr.capwebct.modules.payment.dao.hibernate.ExternalApplicationDAO">
    <property name="sessionFactory" ref="hibernateSessionFactory" />
  </bean>
  
  <!-- SERVICE  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <bean id="invoiceService" class="fr.capwebct.modules.payment.service.impl.InvoiceService">
    <property name="invoiceDAO" ref="invoiceDAO" />
    <property name="objectDAO" ref="objectDAO" />
  </bean>

  <bean id="accountService" class="fr.capwebct.modules.payment.service.impl.AccountService">
    <property name="objectDAO" ref="objectDAO" />
    <property name="accountDAO" ref="accountDAO" />
  </bean>

  <bean id="contractService" class="fr.capwebct.modules.payment.service.impl.ContractService">
    <property name="contractDAO" ref="contractDAO" />
    <property name="objectDAO" ref="objectDAO" />
  </bean>
  
  <bean id="familyAccountService" class="fr.capwebct.modules.payment.service.impl.FamilyAccountService">
    <property name="externalApplicationDAO" ref="externalApplicationDAO" />
    <property name="externalFamilyAccountDAO" ref="externalFamilyAccountDAO" />
    <property name="capwebctFamilyAccountDAO" ref="capwebctFamilyAccountDAO" />
  </bean>
  
  <bean id="paymentService" class="fr.capwebct.modules.payment.service.impl.PaymentService">
    <property name="paymentDAO" ref="paymentDAO" />
    <property name="invoiceService" ref="invoiceService" />
    <property name="accountService" ref="accountService" />
    <property name="contractService" ref="contractService" />
  </bean>
  
  <bean id="externalApplicationService" 
    class="fr.capwebct.modules.payment.service.impl.ExternalApplicationService">
    <property name="externalApplicationDAO" ref="externalApplicationDAO" />
    <property name="familyAccountService" ref="familyAccountService" />
  </bean>
  
  <bean id="casFilter" class="fr.capwebct.modules.payment.web.filter.CASFilter"
    init-method="init">
    <property name="loginUrl" value="${cas.login_url}"/>
    <property name="validateUrl" value="${cas.validate_url}"/>
    <property name="serverNames" value="${cas.server_names}"/>
    <property name="logoutUrl" value="${cas.logout_url}" />
    <property name="localAuthority" value="${capdemat.local_authority}"></property>
  </bean>
  
  <bean id="agentService" class="fr.capwebct.modules.payment.service.impl.AgentService">
    <property name="agentDAO"><ref bean="agentDAO"/></property>
    <property name="logoutUrl" value="${cas.logout_url}" />
  </bean>
  
  <bean id="securityContext" class="fr.capwebct.modules.payment.security.SecurityContext">
    <property name="agentService" ref="agentService" />
    <property name="administratorGroups">
      <list>
       <value>${agent.administrator_group}</value>
      </list>
    </property>
    <property name="agentGroups">
      <list>
       <value>${agent.contributor_group}</value>
      </list>
    </property>    
  </bean>
  
  <bean id="auditService" class="fr.capwebct.modules.payment.service.impl.AuditService">
    <property name="externalImportAuditDAO" ref="externalImportAuditDAO" />
  </bean>
  
  <bean id="importService" class="fr.capwebct.modules.payment.service.impl.ImportService">
    <property name="csvImportService" ref="csvImportService" />
    <property name="invoiceService" ref="invoiceService" />
    <property name="accountService" ref="accountService" />
    <property name="contractService" ref="contractService" />
    <property name="familyAccountService" ref="familyAccountService" />
    <property name="auditService" ref="auditService" />
    <property name="paymentService" ref="paymentService" />
    <property name="externalApplicationService" ref="externalApplicationService" />
  </bean>
  
  <bean id="csvImportService" class="fr.capwebct.modules.payment.service.impl.CsvImportService"
    init-method="init">
    <property name="accountsImporters">
      <map>
        <entry key="generic">
          <map>
            <entry key="mapping" value="classpath:/csv/generic/csv-mapping-account-generic.xml" />
            <entry key="formatter" value="classpath:/csv/generic/csv-formatter-common-generic.xml" />
          </map>
        </entry>
      </map>
    </property>
    <property name="invoicesImporters">
      <map>
        <entry key="generic">
          <map>
            <entry key="mapping" value="classpath:/csv/generic/csv-mapping-invoice-generic.xml" />
            <entry key="formatter" value="classpath:/csv/generic/csv-formatter-common-generic.xml" />
          </map>
        </entry>
      </map>
    </property>
    <property name="contractsImporters">
      <map>
        <entry key="generic">
          <map>
            <entry key="mapping" value="classpath:/csv/generic/csv-mapping-contract-generic.xml" />
            <entry key="formatter" value="classpath:/csv/generic/csv-formatter-common-generic.xml" />
          </map>
        </entry>
      </map>
    </property>
    <property name="invoiceDetailsImporters">
      <map>
        <entry key="generic">
          <map>
            <entry key="mapping" value="classpath:/csv/generic/csv-mapping-invoice-detail-generic.xml" />
            <entry key="formatter" value="classpath:/csv/generic/csv-formatter-common-generic.xml" />
          </map>
        </entry>
      </map>
    </property>
    <property name="accountDetailsImporters">
      <map>
        <entry key="generic">
          <map>
            <entry key="mapping" value="classpath:/csv/generic/csv-mapping-account-detail-generic.xml" />
            <entry key="formatter" value="classpath:/csv/generic/csv-formatter-common-generic.xml" />
          </map>
        </entry>
      </map>
    </property>
    <property name="externalFamilyAccountsImporters">
      <map>
        <entry key="generic">
          <map>
            <entry key="mapping" value="classpath:/csv/generic/csv-mapping-external-family-account-generic.xml" />
            <entry key="formatter" value="classpath:/csv/generic/csv-formatter-common-generic.xml" />
          </map>
        </entry>
      </map>
    </property>
  </bean>

  <bean id="axelConnectorService" class="fr.capwebct.modules.payment.service.impl.AxelConnectorService">
    <property name="enabled" value="${export.axel.enabled}" />
    <property name="paymentService" ref="paymentService" />
    <property name="invoiceService" ref="invoiceService" />
    <property name="externalApplicationService" ref="externalApplicationService" />
    <property name="importService" ref="importService" />
    <property name="ftpService">
      <bean class="fr.capwebct.modules.payment.service.impl.FtpService">
        <property name="ftpHost" value="${export.axel.ftp_host}" />
        <property name="ftpPort" value="${export.axel.ftp_port}" />
        <property name="ftpUsername" value="${export.axel.ftp_username}" />
        <property name="ftpPassword" value="${export.axel.ftp_password}" />      
      </bean>
    </property>
  </bean>
  
  <!-- TRANSACTION -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <bean id="seviceTxManager"
    class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="hibernateSessionFactory" />
  </bean>

  <tx:advice id="serviceTxAdvice" transaction-manager="seviceTxManager">
    <tx:attributes>
      <tx:method name="get*" read-only="true" />
      <tx:method name="search*" read-only="true" />
      <tx:method name="*" />
    </tx:attributes>
  </tx:advice>

  <aop:config>
    <aop:pointcut id="serviceOperation"
      expression="execution(* fr.capwebct.modules.payment.service.*.*(..))" />
      
    <!-- transaction management aspect -->  
    <aop:advisor advice-ref="serviceTxAdvice" pointcut-ref="serviceOperation" />
    
    <!-- logging aspect (TODO : dev only) -->
    <aop:advisor advice-ref="serviceLoggingAdvice" pointcut-ref="serviceOperation"/>

  </aop:config>

  <bean id="serviceLoggingAdvice" 
    class="fr.capwebct.modules.payment.service.advice.ServiceLoggingAdvice" />
  
  <!-- Web Beans -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basename"><value>messages</value></property>
  </bean>

  <bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver">
  </bean>
  
  <bean id="multipartResolver"
    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- one of the properties available; the maximum file size in bytes -->
    <property name="maxUploadSize" value="15000000"/>
  </bean>

  <!--  Web Services -->
  <bean id="xmlBeanMarshaller" class="org.springframework.oxm.xmlbeans.XmlBeansMarshaller" />
  
  <bean name="capwebctWebServiceTemplate" 
    class="org.springframework.ws.client.core.WebServiceTemplate">
    <property name="defaultUri" value="${capdemat.webservice.default_uri}" />
    <property name="marshaller" ref="xmlBeanMarshaller" />
    <property name="unmarshaller" ref="xmlBeanMarshaller" />
  </bean>

  <bean id="capwebctWebServiceClient"
    class="fr.capwebct.modules.payment.webservice.client.impl.CapwebctWebServiceClient">
    <property name="webServiceTemplate" ref="capwebctWebServiceTemplate" />
    <property name="localAuthority" value="${capdemat.local_authority}" />
    <property name="interceptors" ref="securityInterceptor" />
  </bean>
  
  <bean id="securityInterceptor" class="org.springframework.ws.soap.security.wss4j.Wss4jSecurityInterceptor">
    <property name="securementActions" value="UsernameToken"/>
    <property name="securementUsername" value="CapwebctPaymentModule"/>
    <property name="securementPassword" value="${capdemat.webservice.password}"/>
    <property name="securementPasswordType" value="PasswordText" />
 </bean>

  <!-- Scheduled Jobs -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  
  <bean id="axelPaymentsExporterJob"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="axelConnectorService" />
    <property name="targetMethod" value="exportPayments" />
    <property name="concurrent" value="false" />
  </bean>

  <bean id="axelDataImporterJob"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="axelConnectorService" />
    <property name="targetMethod" value="importData" />
    <property name="concurrent" value="false" />
  </bean>

  <!-- testing purposes only -->
  <!-- 
  <bean id="axelPaymentsExporterTrigger" 
  	class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    <property name="jobDetail" ref="axelPaymentsExporterJob" />
    <property name="startDelay" value="5000" />
    <property name="repeatInterval" value="600000" />
  </bean>

  <bean id="axelDataImporterTrigger" 
  	class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    <property name="jobDetail" ref="axelDataImporterJob" />
    <property name="startDelay" value="10000" />
    <property name="repeatInterval" value="600000" />
  </bean>
  -->

  <!-- production settings -->
  <bean id="axelPaymentsExporterTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="axelPaymentsExporterJob" />
    <property name="cronExpression" value="0 0 4 * * ?" />
  </bean>
  
  <bean id="axelDataImporterTrigger"
    class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="axelDataImporterJob" />
    <property name="cronExpression" value="0 40 4 * * ?" />
  </bean>
  
  <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="triggers">
      <list>
		<ref bean="axelPaymentsExporterTrigger" />
		<ref bean="axelDataImporterTrigger" />
      </list>
    </property>
  </bean>

</beans>
